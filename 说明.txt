创建模式：
	所谓创建模式，就是通过一系列的操作，会产生新的对象。生产新的对象。
	单列解决不重复创建的问题，保证唯一性；
	工厂解决需要重复创建时的工作量和入口问题，由所谓的“工厂”统一提供。工厂类往往只解决某单一类型数据的生产，
	抽象工厂，就是多种不同类型的工厂的工厂，由抽象工厂生成对应类型的Factory，再由该Factory去解决迁移步骤中提到的功能；
	原型模式，其实更多的强调适合在需要通过Clone()产生新对象的场景。
	建造者，实现方案很多，就是提取具有相同行为的类，作为抽象类定义，用不同的类去实现该抽象类，并初始化；核心思想是其职能区分更明确。
		行为类
		抽象接口
		第三方执行者
		相当就是由一个所谓的建造者，去完成所有类型的数据生产工作。
结构模式：
	就是在具有不同行为的类之间，统一其对外调用接口；做到结构上的“貌似”一致；
	适配器模式，让一个类具有另一个具有类似的行为类的行为。
		A具有C方法
		B具有D方法
		那么可以在A中改造C方法，让C方法也具有使用B->D方法的能力，适用于不方便直接暴露B的应用场景。但又不破坏B的结构。仅仅是结构上的“联谊”。
	桥接模式，用一个抽象头及实现去代理（桥接）一系列的接口及实现，适用于老系统改造。
		当老系统中的接口不方便修改时，可采用此种方法。